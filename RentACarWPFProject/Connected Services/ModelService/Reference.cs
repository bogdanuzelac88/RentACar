//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentACarWPFProject.ModelService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarModel", Namespace="http://schemas.datacontract.org/2004/07/Common.Models")]
    [System.SerializableAttribute()]
    public partial class CarModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerId {
            get {
                return this.ManufacturerIdField;
            }
            set {
                if ((this.ManufacturerIdField.Equals(value) != true)) {
                    this.ManufacturerIdField = value;
                    this.RaisePropertyChanged("ManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ModelService.IModelService")]
    public interface IModelService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/GetModels", ReplyAction="http://tempuri.org/IModelService/GetModelsResponse")]
        RentACarWPFProject.ModelService.GetModelsResponse GetModels(RentACarWPFProject.ModelService.GetModelsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/GetModels", ReplyAction="http://tempuri.org/IModelService/GetModelsResponse")]
        System.Threading.Tasks.Task<RentACarWPFProject.ModelService.GetModelsResponse> GetModelsAsync(RentACarWPFProject.ModelService.GetModelsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/AddNewModel", ReplyAction="http://tempuri.org/IModelService/AddNewModelResponse")]
        RentACarWPFProject.ModelService.AddNewModelResponse AddNewModel(RentACarWPFProject.ModelService.AddNewModelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/AddNewModel", ReplyAction="http://tempuri.org/IModelService/AddNewModelResponse")]
        System.Threading.Tasks.Task<RentACarWPFProject.ModelService.AddNewModelResponse> AddNewModelAsync(RentACarWPFProject.ModelService.AddNewModelRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModels", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetModelsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int manufacturerId;
        
        public GetModelsRequest() {
        }
        
        public GetModelsRequest(int manufacturerId) {
            this.manufacturerId = manufacturerId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModelsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetModelsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<RentACarWPFProject.ModelService.CarModel> GetModelsResult;
        
        public GetModelsResponse() {
        }
        
        public GetModelsResponse(System.Collections.Generic.List<RentACarWPFProject.ModelService.CarModel> GetModelsResult) {
            this.GetModelsResult = GetModelsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddNewModel", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddNewModelRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public RentACarWPFProject.ModelService.CarModel model;
        
        public AddNewModelRequest() {
        }
        
        public AddNewModelRequest(RentACarWPFProject.ModelService.CarModel model) {
            this.model = model;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddNewModelResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddNewModelResponse {
        
        public AddNewModelResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelServiceChannel : RentACarWPFProject.ModelService.IModelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModelServiceClient : System.ServiceModel.ClientBase<RentACarWPFProject.ModelService.IModelService>, RentACarWPFProject.ModelService.IModelService {
        
        public ModelServiceClient() {
        }
        
        public ModelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RentACarWPFProject.ModelService.GetModelsResponse GetModels(RentACarWPFProject.ModelService.GetModelsRequest request) {
            return base.Channel.GetModels(request);
        }
        
        public System.Threading.Tasks.Task<RentACarWPFProject.ModelService.GetModelsResponse> GetModelsAsync(RentACarWPFProject.ModelService.GetModelsRequest request) {
            return base.Channel.GetModelsAsync(request);
        }
        
        public RentACarWPFProject.ModelService.AddNewModelResponse AddNewModel(RentACarWPFProject.ModelService.AddNewModelRequest request) {
            return base.Channel.AddNewModel(request);
        }
        
        public System.Threading.Tasks.Task<RentACarWPFProject.ModelService.AddNewModelResponse> AddNewModelAsync(RentACarWPFProject.ModelService.AddNewModelRequest request) {
            return base.Channel.AddNewModelAsync(request);
        }
    }
}
